@import 'colorVariables.scss';

// circleMenu for student work tab
$tab-menu-class: worktab-menu-item;
$toggler-size: 35px;
$toggler-color: $stable;
$item-bgcolor: $stable;
$toggler-transition: transform .5s, top .5s;

$item-count: 10;
$item-size: $toggler-size * 2;
$item-color: black;
$item-transition: .5s;


@mixin transform ($index, $radius: 100px ) {
    transform: rotate(360deg / $item-count * $index) translateX(-$item-size - $radius);
}

@media only screen and (max-width : 321px){
  .menu-toggler:checked ~ ul {
    @for $i from 0 through $item-count - 1 {
      .#{$tab-menu-class}:nth-child(#{$i + 1}) {
        @include transform($i,45px);
      }
    }
  }
}

@media only screen and (max-width : 420px) and (min-width : 321px){
  .menu-toggler:checked ~ ul {
    @for $i from 0 through $item-count - 1 {
      .#{$tab-menu-class}:nth-child(#{$i + 1}) {
        @include transform($i,55px);
      }
    }
  }
}

@media only screen and (max-width : 3000px) and (min-width : 420px){
  .menu-toggler:checked ~ ul {
    @for $i from 0 through $item-count - 1 {
      .#{$tab-menu-class}:nth-child(#{$i + 1}) {
        @include transform($i);
      }
    }
  }
}

@mixin size ($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absolute-center {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  margin: auto !important;
}

@mixin line {
  @include size($toggler-size, $toggler-size/8);
  display: block;
  z-index: 2;
  border-radius: $toggler-size/16;
  background: $toggler-color;
  transition: $toggler-transition;
}

// styles

body {
  overflow: hidden;
}

.menu-toggler {
  @include absolute-center;
  @include size($toggler-size);
  z-index: 3;
  opacity: 0;
  cursor: pointer;
  
  &:hover + label,
  &:hover + label:before,
  &:hover + label:after {
    background: $toggler-color;
  }
}

.menu-toggler:checked {
  & + label {
    background: transparent;
  }
  
  & + label:before,
  & + label:after {
    top: 0;
    width: $toggler-size;
    transform-origin: 50% 50%;
  }
  
  & + label:before {
    transform: rotate(45deg);
  }
  
  & + label:after {
    transform: rotate(-45deg);
  }
}

.menu-toggler:checked ~ ul {
  .#{$tab-menu-class} {
    opacity: 1;
  }
  
  .#{$tab-menu-class} a {
    pointer-events: auto;
  }
}

.menu-toggler + label {
  @include line;
  @include absolute-center;
  
  &:before,
  &:after {
    @include line;
    content: "";
    position: absolute;
    left: 0;
  }
  
  &:before {
    top: $toggler-size/4;
  }
  
  &:after {
    top: -$toggler-size/4;
  }
}

@for $i from 0 through $item-count - 1 {
  .#{$tab-menu-class}:nth-child(#{$i + 1}) a {
    transform: rotate(-360deg / $item-count * $i);
  }
}

.#{$tab-menu-class} {
  @include absolute-center;
  @include size($item-size);
  display: block;
  opacity: 0;
  transition: $item-transition;
}

.#{$tab-menu-class} a {
  display: block;
  width: inherit;
  height: inherit;
  line-height: $item-size;
  color: rgba($item-color, 0.7);
  background: rgba($item-bgcolor, 0.2);
  border-radius: 50%;
  text-align: center;
  text-decoration: none;
  font-size: $item-size/2;
  pointer-events: none;
  transition: .2s;
  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.5);
  -webkit-box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.5);
  -moz-box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.5);
  
  &:hover {
    box-shadow: 0 0 0 $item-size/40 rgba(white, 0.3);
    color: $item-color;
    background: rgba(white, 0.3);
    font-size: $item-size/1.8;
  }

  &:active{
    opacity: 0.3;
  }
}